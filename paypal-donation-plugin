<?php
/*
Plugin Name: Pyapal Dontaion
Plugin URI: https://eportals.in/
Description: Provide a simple form with paypal dontation button with sort code [register_form]
Version: 1.0
Author: Dilip Vyas
Author URI: https://eportals.in/
*/




 
function paypal_setting_admin() {
    $page_title		=	'PayPal Donation';
    $menu_title		=	'PayPal Donation';
    $capability		=	'manage_options';
    $menu_slug		=	'wp_paypal_donation';
    $function		=	'paypal_donation_option';
    $icon			=	plugin_dir_url( __FILE__ ).'icon.png';
    add_menu_page($page_title,$menu_title,$capability,$menu_slug,$function,$icon);
}
 
add_action('admin_menu', 'paypal_setting_admin');


function paypal_donation_option(){?>
<h1>PayPal Account Setting</h1>
  <form method="post" action="options.php">
    <?php settings_fields( 'my-cool-plugin-settings-group' ); ?>
    <?php do_settings_sections('my-cool-plugin-settings-group' ); ?>
 
    <table class="form-table">
      
      <tr>
		<th scope="row"><label for="paypal_account">PayPal Account</label></th>
		<td><input type="text" class="regular-text" value="<?php echo get_option('paypal_account') ?>" id="paypal_account" name="paypal_account"></td>
	</tr>
	<tr>
		<th scope="row"><label for="returnurl">Return URL</label></th>
		<td><input type="text" class="regular-text" value="<?php echo get_option('returnurl') ?>" id="returnurl" name="returnurl"></td>
	</tr>
	<tr>
		<th scope="row"><label for="returnurl">Donation Purpose</label></th>
		<td><input type="text" class="regular-text" value="<?php echo get_option('donation_purpose') ?>" id="donation_purpose" name="donation_purpose"></td>
	</tr>
	<tr>
		<th scope="row"><label for="accounttype">PayPal Sandbox</label></th>
		<td>
			<select id="return_method" name="accounttype">
				<option value="no" <?php if(get_option('accounttype')=='no'){ echo "selected";} ?>>No</option>
				<option value="yes" <?php if(get_option('accounttype')=='yes'){ echo "selected";} ?>>Yes</option>
			</select>
		</td>
	</tr>
    </table>
    <?php submit_button(); ?>
  </form>
<?php
 }
add_action( 'admin_init', 'update_extra_post_info' );
if( !function_exists("update_extra_post_info") ) {
function update_extra_post_info() {
  register_setting( 'my-cool-plugin-settings-group', 'paypal_account' ); 
  register_setting( 'my-cool-plugin-settings-group', 'returnurl' );
  register_setting( 'my-cool-plugin-settings-group', 'accounttype' );
  register_setting( 'my-cool-plugin-settings-group', 'donation_purpose' );
  
}
}


// Create short code for paypal donation button
function cits_registration_form() {
	// only show the registration form to non-logged-in member
	//if(!is_user_logged_in()) {
		global $cits_load_css;
		// set this to true so the CSS is loaded
		$cits_load_css = true;
		// check to make sure user registration is enabled
		deliver_mail();
		// only show the registration form if allowed
			$output = cits_registration_form_fields();
		
		return $output;
}
add_shortcode('register_form', 'cits_registration_form');

// registration form fields
function cits_registration_form_fields() {
	ob_start(); ?>	
		<?php /*?><h3 class="cits_header"><?php _e('Register New Account'); ?></h3><?php */?>
		<?php 
		// show any error messages after form submission
		//cits_show_error_messages(); 
		//print_r($_REQUEST);
		?>
		<div class="donation-wr">
			<form action="" method="post" id="formfordonation">
				<div class="donate-form">
					<h3><i class="fa fa-money"></i> Donation Amount</h3>
					<div class="form-inner">
						<div>Choose the amount you would like to donate?</div>
						<div class="radio-wr">
							<span><input type="radio" name="amount1" value="250" /> $250</span>
							<span><input type="radio" name="amount1" value="150" /> $150</span>
							<span><input type="radio" name="amount1" value="100" /> $100</span>
							<span><input type="radio" name="amount1" value="75" /> $75</span>
							<span><input type="radio" name="amount1" value="50" /> $50</span>
						</div>
						<div class="clearfix">
							<div class="left">Other Amount</div>
							<div class="right">$ <input type="text" name="amount" />
							<?php echo cits_show_error_messages('amount'); ?>
							</div>
							
						</div>
					</div>
				</div>

				<div class="donate-form">
					<h3><i class="fa fa-money"></i> Donation Information</h3>

					<div class="form-inner">
						<div class="clearfix">
							<div class="left">Name<span class="required">*</span></div>
							<div class="right"><input type="text" name="fullname" />
							<?php echo cits_show_error_messages('fullname'); ?>
							</div>
							
						</div>

						<div class="clearfix">
							<div class="left">Company Foundation</div>
							<div class="right"><input type="text" name="company" /></div>
						</div>

						<div class="clearfix">
							<div class="left">Email Address<span class="required">*</span></div>
							<div class="right"><input type="text" name="email" />
							<?php echo cits_show_error_messages('email'); ?>
							</div>
						</div>

						<div class="clearfix">
							<div class="left">Address Line<span class="required">*</span></div>
							<div class="right"><input type="text" name="address" />
							<?php echo cits_show_error_messages('address'); ?>
							</div>
						</div>

						<div class="clearfix">
							<div class="left">City<span class="required">*</span></div>
							<div class="right"><input type="text" name="city" />
							<?php echo cits_show_error_messages('city'); ?>
							</div>
						</div>

						<div class="clearfix">
							<div class="left">State<span class="required">*</span></div>
							<div class="right"><input type="text" name="state" />
							<?php echo cits_show_error_messages('state'); ?>
							</div>
						</div>

						<div class="clearfix">
							<div class="left">Country<span class="required">*</span></div>
							<div class="right"><input type="text" name="country" />
							<?php echo cits_show_error_messages('country'); ?>
							</div>
						</div>

						<div class="clearfix">
							<div class="left">Phone<span class="required">*</span></div>
							<div class="right"><input type="text" name="phone" />
							<?php echo cits_show_error_messages('phone'); ?>
							</div>
						</div>
					</div>

				</div>
				<div class="donate-submit"><input type="submit" name="submit" Value="Payment" /></div>
			</form>
		</div>
	<?php
	return ob_get_clean();
}


// register a new user
function cits_add_new_member() {
  	if (isset( $_POST["submit"] )) {
		$fullname		= $_POST["fullname"];	
		$email		= $_POST["email"];
		$address 	= $_POST["address"];
		$city	 	= $_POST["city"];
		$state		= $_POST["state"];
		$country	= $_POST["country"];
		$phone 		= $_POST["phone"];
		$amount 	= $_POST["amount"];
		$amount1 	= $_POST["amount1"];
		// this is required for username checks

		if(empty($fullname)) {
			// Username already registered
			cits_errors()->add('fullname', __('Please Enter Your Name'));
		}

		if(empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
			// invalid username
			cits_errors()->add('email', __('Please Enter Valid Email Address'));
		}
		if(empty($address)) {
			// Username already registered
			cits_errors()->add('address', __('Please Enter Your Address'));
		}
		if(empty($city)) {
			// Username already registered
			cits_errors()->add('city', __('Please Enter Your City'));
		}
		if(empty($state)) {
			// Username already registered
			cits_errors()->add('state', __('Please Enter Your State'));
		}
		if(empty($country)) {
			// Username already registered
			cits_errors()->add('country', __('Please Enter Your Country'));
		}
		if(empty($phone)) {
			// Username already registered
			cits_errors()->add('phone', __('Please Enter Your Phone'));
		}
		if(empty($amount) && empty($amount1)) {
			// Username already registered
			cits_errors()->add('amount', __('Please Enter Your Amount'));
		}

		$errors = cits_errors()->get_error_messages();
		// only create the user in if there are no errors
		$amountfinal = ($amount) ? $amount : $amount1;
		if(empty($errors)) {
			echo '<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>';

			echo '<script type="text/javascript">
				jQuery(document).ready(function(){
					jQuery("#formfordonation").html("");
					jQuery("title").html("Paypal Redirecting");
					jQuery("#formfordonation").html("You are redirecting to paypal Please wait!");
					jQuery( "#target-donate" ).submit();
						
						
					});
				</script>';
			if(get_option('accounttype') == 'yes'){
				$url = "https://www.sandbox.paypal.com/cgi-bin/webscr"; 
			}else{
				$url = "https://www.paypal.com/cgi-bin/webscr"; 
			}
			
			echo '<div style="display:none;">
					<form action="'.$url.'" method="post" id="target-donate">
					    <div class="paypal-donations">
					        <input type="hidden" name="cmd" value="_donations">
					        <input type="hidden" name="bn" value="Donate">
					        <input type="hidden" name="business" value="'.get_option('paypal_account').'">
					        <input type="hidden" name="return" value="'.get_option('returnurl').'">
					        <input type="hidden" name="item_name" value="'.get_option('donation_purpose').'">
					        <input type="hidden" name="amount" value="'.$amountfinal.'">
					        <input type="hidden" name="rm" value="2">
					        <input type="hidden" name="on0" value="donar_email">
					        <input type="hidden" name="os0" value="'.$email.'">
					        <input type="hidden" name="currency_code" value="USD">
					         <input type="image" src="https://www.paypal.com/en_US/i/btn/btn_donate_LG.gif" name="submit" alt="PayPal - The safer, easier way to pay online.">
					    </div>
					</form>
				</div>';
		}
	}
}
add_action('init', 'cits_add_new_member');

//mail function
//mail function
function deliver_mail() {

    // if the submit button is clicked, send the email
    if ( isset( $_REQUEST['option_selection1'] ) ) {

        // sanitize form values
        $from   = get_option( 'admin_email' );
        $subject = get_option( 'donation_purpose' ) ? get_option( 'donation_purpose' ) : "Donation";
        $message = "Thank you for your donation and your generous contribution of $".$_REQUEST['payment_gross'];

        // get the blog administrator's email address
        $to = $_REQUEST['option_selection1'];

        $headers = "From: Admin <$from>" . "\r\n";

        // If email has been process for sending, display a success message
        if ( wp_mail( $to, $subject, $message, $headers ) ) {
            echo '<div>';
            echo '<p style="color:green;">Thank you for your donation</p>';
            echo '</div>';
        } else {
            echo '<p style="color:red;">An unexpected error occurred<p>';
        }
	}
}
// used for tracking error messages
function cits_errors(){
    static $wp_error; // Will hold global variable safely
    return isset($wp_error) ? $wp_error : ($wp_error = new WP_Error(null, null, null));
}
// displays error messages from form submissions
function cits_show_error_messages($code) {

	if($codes = cits_errors()->get_error_codes()) {

		echo '<div class="cits_errors1">';
		    // Loop error codes and display errors
		        $message = cits_errors()->get_error_message($code);
		        echo '<span class="error">' . $message . '</span><br/>';
		echo '</div>';

		// print_r($codes);
		// echo '<div class="cits_errors">';
		//     // Loop error codes and display errors
		//    foreach($codes as $code){
		//         $message = cits_errors()->get_error_message($code);
		//         echo '<span class="error">' . $message . '</span><br/>';
		//     }
		// echo '</div>';
	}	
}
// register our form css
function cits_register_css() {
	wp_register_style('cits-form-css', plugin_dir_url( __FILE__ ) . '/css/forms.css');
}
add_action('init', 'cits_register_css');
// load our form css
function cits_print_css() {
	global $cits_load_css;
	// this variable is set to TRUE if the short code is used on a page/post
	if ( ! $cits_load_css )
		return; // this means that neither short code is present, so we get out of here

	wp_print_styles('cits-form-css');
}
add_action('wp_footer', 'cits_print_css');
